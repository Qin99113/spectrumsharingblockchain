syntax = "proto3";

package spectrumsharingblockchain.spectrumrequest;
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "spectrumsharingblockchain/spectrumrequest/params.proto";

option go_package = "spectrumSharingBlockchain/x/spectrumrequest/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams  (MsgUpdateParams ) returns (MsgUpdateParamsResponse );
  rpc CreateRequest (MsgCreateRequest) returns (MsgCreateRequestResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                                   "authority";
  option           (amino.name) = "spectrumsharingblockchain/x/spectrumrequest/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateRequest {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string organization = 2;
  string user_type = 3;                  
  int32 bandwidth = 4;
  int32 duration = 5;
  cosmos.base.v1beta1.Coin bid_amount = 6;
  string status = 7;
  int64 request_time = 8;

}

message MsgCreateRequestResponse { 
  string status = 1;  // 状态信息，例如 "success" 或 "failure"
  string message = 2; // 可选的描述信息
 }

